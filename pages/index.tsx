import Head from 'next/head'
import Banner from '../components/Banner'
import Header from '../components/Header'
import {  GetServerSideProps } from "next";
import requests from '../requests'
import { Movie } from '../typings';
import Row from '../components/Row';
import useAuth from '../hooks/useAuth';
import { useRecoilValue } from 'recoil';
import { modalState } from '../atoms/modalAtom';
import PopUp from "../components/PopUp";
import Plan from './plan';

interface Props {
  netflixOriginals: Movie[]
  actionMovies: Movie[]
  comedyMovies: Movie[]
  documentaries: Movie[]
  horrorMovies: Movie[]
  romanceMovies: Movie[]
  topRated: Movie[]
  trendingNow: Movie[]
}

const Home = ({
  netflixOriginals,
  actionMovies,
  comedyMovies,
  documentaries,
  horrorMovies,
  romanceMovies,
  topRated,
  trendingNow,
}: Props) => {
  const showModal = useRecoilValue(modalState)
  const { loading } = useAuth(); 
  const subscription = null;
  if(loading || subscription ) {
    return null
  }
  if(!subscription) return <Plan />
  return (
    <div className="h-screen lg:h-[140vh] relative bg-gradient-to-b from-gray-900/10 to-[#010511]">
      <Head>
        <title>Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="relative pl-4 pb-24 lg:pl-16 space-y-4">
        <Banner netflixOriginals={netflixOriginals} />
        <section>
          <Row title="Trending Now" movies={trendingNow} />
          <Row title="Top Rated" movies={topRated} />
          <Row title="Action Thrillers" movies={actionMovies} />
          <Row title="Comedies" movies={comedyMovies} />
          <Row title="Scary Movies" movies={horrorMovies} />
          <Row title="Romance Movies" movies={romanceMovies} />
          <Row title="Documentaries" movies={documentaries} />
        </section>
      </main>
      <PopUp />
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
const [
  netflixOriginals,
  trendingNow,
  topRated,
  actionMovies,
  comedyMovies,
  horrorMovies,
  romanceMovies,
  documentaries,
] = await Promise.all([
  fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
  fetch(requests.fetchTrending).then((res) => res.json()),
  fetch(requests.fetchTopRated).then((res) => res.json()),
  fetch(requests.fetchActionMovies).then((res) => res.json()),
  fetch(requests.fetchComedyMovies).then((res) => res.json()),
  fetch(requests.fetchHorrorMovies).then((res) => res.json()),
  fetch(requests.fetchRomanceMovies).then((res) => res.json()),
  fetch(requests.fetchDocumentaries).then((res) => res.json()),
]);
  return {
    props: {
      netflixOriginals: netflixOriginals.results,
      trendingNow: trendingNow.results,
      topRated: topRated.results,
      actionMovies: actionMovies.results,
      comedyMovies: comedyMovies.results,
      horrorMovies: horrorMovies.results,
      romanceMovies: romanceMovies.results,
      documentaries: documentaries.results,
    },
  };
};

export default Home
